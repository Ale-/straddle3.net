# Generated by Django 2.0.3 on 2018-05-18 10:25

import apps.models.utils
import apps.models.validators
import ckeditor_uploader.fields
import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import djgeojson.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment_file', models.ImageField(upload_to='', verbose_name='Attachment file')),
                ('object_id', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'adjunto',
                'ordering': ['order'],
                'verbose_name_plural': 'adjuntos',
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Nombre')),
                ('slug', models.SlugField(editable=False)),
                ('geolocation', djgeojson.fields.PointField(blank=True, verbose_name='Geolocalización')),
                ('start_date', models.DateField(blank=True, help_text='Puedes usar el formato dd/mm/yyyy', null=True, verbose_name='Fecha de comienzo')),
                ('end_date', models.DateField(blank=True, help_text='Puedes usar el formato dd/mm/yyyy', null=True, verbose_name='Fecha de finalización')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Descripción')),
                ('agents', models.TextField(blank=True, null=True, verbose_name='Agentes')),
                ('published', models.BooleanField(default=False, help_text='Indica si este contenido es visible públicamente', verbose_name='Publicado')),
                ('featured', models.BooleanField(default=False, help_text='Indica si este contenido es destacado y ha de tener mayor visibilidad', verbose_name='Destacado')),
            ],
            options={
                'verbose_name': 'conexión',
                'verbose_name_plural': 'conexiones',
            },
        ),
        migrations.CreateModel(
            name='ConnectionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Nombre de la categoría')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Descripción opcional')),
                ('color', colorfield.fields.ColorField(blank=True, max_length=18, verbose_name='Color de la categoría')),
            ],
            options={
                'verbose_name': 'tipo de conexión',
                'verbose_name_plural': 'tipos de conexión',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.ImageField(upload_to=apps.models.utils.RenameImage('images/'), validators=[apps.models.validators.ImageSizeValidator({'max_height': 1280, 'max_width': 1920, 'min_height': 480, 'min_width': 480}), apps.models.validators.ImageTypeValidator(['jpeg', 'png'])], verbose_name='Archivo de imagen')),
                ('alt_text', models.CharField(max_length=200, verbose_name='Texto alternativo')),
                ('object_id', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'imagen',
                'ordering': ['order'],
                'verbose_name_plural': 'imágenes',
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL del enlace')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Título del enlace')),
                ('object_id', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'enlace',
                'ordering': ['order'],
                'verbose_name_plural': 'enlaces',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Nombre del proyecto')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Resumen')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Texto')),
                ('slug', models.SlugField(blank=True, editable=False)),
                ('start_date', models.DateField(blank=True, help_text='Puedes usar el formato dd/mm/yyyy', null=True, verbose_name='Fecha de comienzo')),
                ('end_date', models.DateField(blank=True, help_text='Puedes usar el formato dd/mm/yyyy', null=True, verbose_name='Fecha de finalización')),
                ('geolocation', djgeojson.fields.PointField(blank=True, verbose_name='Geolocalización')),
                ('promoter', models.TextField(blank=True, null=True, verbose_name='Promotor')),
                ('author_text', models.TextField(blank=True, null=True, verbose_name='Autor')),
                ('gratitude_text', models.TextField(blank=True, null=True, verbose_name='Texto de agradecimientos')),
                ('published', models.BooleanField(default=False, help_text='Indica si este contenido es visible públicamente', verbose_name='Publicado')),
                ('featured', models.BooleanField(default=False, help_text='Indica si este contenido es destacado y ha de tener mayor visibilidad', verbose_name='Destacado')),
            ],
            options={
                'verbose_name': 'Proyecto',
                'verbose_name_plural': 'Proyectos / Trabajos',
            },
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Nombre de la categoría')),
                ('color', colorfield.fields.ColorField(blank=True, max_length=18, verbose_name='Color de la categoría')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Descripción opcional')),
            ],
            options={
                'verbose_name': 'tipo de proyecto',
                'verbose_name_plural': 'tipos de proyecto',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Nombre')),
                ('slug', models.SlugField(editable=False)),
                ('use_text', models.TextField(blank=True, null=True, verbose_name='Funciones básicas/posibles aplicaciones')),
                ('author_text', models.TextField(blank=True, null=True, verbose_name='Autor')),
                ('promoter', models.TextField(blank=True, null=True, verbose_name='Promotor')),
                ('gratitude_text', models.TextField(blank=True, null=True, verbose_name='Texto de agradecimientos')),
                ('license', models.TextField(blank=True, null=True, verbose_name='Licencia')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Descripción')),
                ('published', models.BooleanField(default=False, help_text='Indica si este contenido es visible públicamente', verbose_name='Publicado')),
                ('featured', models.BooleanField(default=False, help_text='Indica si este contenido es destacado y ha de tener mayor visibilidad', verbose_name='Destacado')),
            ],
            options={
                'verbose_name': 'recurso',
                'verbose_name_plural': 'recursos',
            },
        ),
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Nombre de la categoría')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Descripción opcional')),
                ('color', colorfield.fields.ColorField(blank=True, max_length=18, verbose_name='Color de la categoría')),
            ],
            options={
                'verbose_name': 'tipo de recurso',
                'verbose_name_plural': 'tipos de recurso',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Nombre de la etiqueta')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Descripción opcional')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Nombre')),
                ('surname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Apellidos')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Resumen')),
                ('image', models.ImageField(blank=True, upload_to='', verbose_name='Imagen principal')),
                ('published', models.BooleanField(default=False, help_text='Indica si este contenido es visible públicamente', verbose_name='Publicado')),
                ('featured', models.BooleanField(default=False, help_text='Indica si este contenido es destacado y ha de tener mayor visibilidad', verbose_name='Destacado')),
            ],
            options={
                'verbose_name': 'persona en Straddle3',
                'verbose_name_plural': 'equipo Straddle3',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_url', models.CharField(blank=True, help_text='Inserta la url de un video de Youtube o Vimeo', max_length=200, null=True, verbose_name='Video')),
                ('caption', models.TextField(max_length=200, verbose_name='Caption opcional')),
                ('object_id', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='resource',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='models.ResourceCategory', verbose_name='Formato'),
        ),
        migrations.AddField(
            model_name='resource',
            name='tags',
            field=models.ManyToManyField(blank=True, to='models.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='project',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='models.ProjectCategory', verbose_name='Formato'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, to='models.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='connection',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='models.ConnectionCategory', verbose_name='Tipo'),
        ),
        migrations.AddField(
            model_name='connection',
            name='tags',
            field=models.ManyToManyField(blank=True, to='models.Tag', verbose_name='Tags'),
        ),
    ]
